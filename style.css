@import "/global.css"; /* Global CSS ruleset that applies to all of the pages in my website.
This includes things like the icon shapes for the buttons! */


/* Animation keyframes (obviously) */

@keyframes controlLabelsShow {
    0% { transform: translateX(-100%); }
    66.6% { transform: translateX(-100%); }
    100% { transform: translateX(0); }
}

@keyframes openSettings {
    0%    { transform: translateX(calc(100% - 256px)); }
    50%   { transform: translateX(0px);  }
    57.5% { transform: translateX(40px); }
    60%   { transform: translateX(35px); }
    65%   { transform: translateX(20px); }
    70%   { transform: translateX(0px);  }
    75%   { transform: translateX(10px); }
    77.5% { transform: translateX(8px);  }
    80%   { transform: translateX(0px);  }
    100%  { transform: translateX(0px);  }
}

:root { /* Color variables! */
    --primary-color:        #242A44;
    --secondary-color:      #10131E;
    --tertiary-color:       #212538;
    --border-color-1:       #212538;
    --border-color-2:       #10131E;
    --border-color-3:       #394060;
    --button-color:         #FFFFFF;
    --highlight-color:      #394060;
    --text-color:           #FFFFFF;
    --text-highlight-color: #FFFFFF;

    --comment: #FFFFFF;
    --addsub:  #FFA500;
    --move:    #0000FF;
    --jump:    #800080;
    --input:   #FFFF00;
    --output:  #90EE90;
}

/* Generic cover-all rules for 'text' and some colors */
*, p, pre, span, label, .overlay { font-family: 'Roboto Mono', monospace; font-size: 16pt; }
.button:hover, .button:hover * { background-color: var(--highlight-color); }
.simplebar-scrollbar::before { background-color: var(--border-color-1); }
.spacer { flex-grow: 1; }

/* All of this is for the slider inputs.
I hate that Google and Mozilla haven't just combined the
features both have for this amazing element... */
input[type="range"] {
    appearance: none;
    background: transparent;
}
input[type="range"]:hover::-webkit-slider-thumb,
input[type="range"]:hover::-moz-range-thumb { cursor: grab; }
input[type="range"]:active::-webkit-slider-thumb,
input[type="range"]:active::-moz-range-thumb { cursor: grabbing; }
input[type="range"]::-webkit-slider-runnable-track {
    width: 0.2rem; height: 0.2rem;
    border-radius: 2rem;
    background: var(--button-color);
}
input[type="range"]::-webkit-slider-thumb {
    appearance: none;
    margin-top: -8px;
    width: 1rem; height: 1rem;
    border: 4px solid var(--button-color); border-radius: 2rem;
    background-color: var(--button-color);
}
.vri::-webkit-slider-thumb { margin-left: -8px; }

input[type="range"]::-moz-range-track {
    border-radius: 2rem;
    background: var(--highlight-color);
}
input[type="range"]::-moz-range-thumb {
    appearance: none;
    margin-top: -8px;
    width: 16px; height: 16px;
    border: 2px solid var(--button-color); border-radius: 2rem;
    background-color: var(--button-color);
}
input[type="range"]::-moz-range-progress {
    width: 0.2rem;
    background-color: var(--button-color);
}
.vri::-moz-range-track { width: 0.2rem; }
.vri::-moz-range-thumb { margin-left: -8px; }

/* The rules that you probably actually care about :P
The way I order my CSS rules is weird and unconventional, but it works for me.
Anything slightly related to each other are seperated by 1 (one) newline.
Anything that's part of a new section will be seperated by 2 (two) newlines and a comment (hopefully) */

#background { background-color: var(--primary-color); }
#body { display: flex; flex-direction: column; }


#header { /* Everything here is *just* for the header bar */
    position: absolute; top: 0; left: 0;
    width: 100%; height: 36px;
    border-bottom: 4px solid var(--border-color-1);

    background-color: var(--tertiary-color);

    display: flex; flex-direction: row; justify-content: left;
}
#header .button { /* TODO This will hopefully be changed soon and have full file IO support */
    width: 80px; height: 100%;

    display: flex; flex-direction: column; justify-content: center;
}
#header .button p {
    text-align: center;
    color: var(--text-color);
}
#header #spacer { width: 160px; height: 100%; }
#title {
    font-family: 'DM Sans', sans-serif;
    font-size: 24pt;
    align-self: center;
    text-align: center;
    font-weight: 800;
    color: var(--text-color);

    flex-grow: 1;
}


/* This contains everything that's not in the header. (a lot) */
#content {
    position: absolute; top: 40px; left: 0;
    width: 100%; height: calc(100% - 40px);

    flex-grow: 1;
    display: flex; flex-direction: row;
}

#controls {
    width: 76px; height: 100%;
    border-right: 4px solid var(--border-color-2);
    z-index: 2;

    background-color: var(--secondary-color);

    display: flex; flex-direction: column;
}
#controls .button { width: 80px; aspect-ratio: 1/1; }
#controls .button > div > div {
    background-color: var(--button-color);

    transition: transform 0.5s;
}
#controls:hover+#controlLabels, #controlLabels:hover {
    transform: translateX(0);
    animation: 1.5s normal 0s 1 controlLabelsShow;
}

/* NOT A NEW SECTION */
/* All of the rules here are in order that they appear in the HTML file,
so the range input is a little jarring being right there in the middle... */

#runButton { z-index: 2; } 

#stopButton {
    transform: translateY(-100%);
    opacity: 0;
    transition: transform .25s, opacity .5s;
}

#speedControlWrapper {
    width: 80px; height: 160px;

    display: flex; flex-direction: column; justify-content: center;
}
#speedControlWrapper > div {
    width: 100%; height: 100%;

    display: flex; justify-content: center;
}
#speedControlWrapper input[type="range"] {
    width: 100%; height: 90%;
    align-self: center;
    writing-mode: vertical-lr;
    direction: rtl;
}

.button#settingsButton > div > div {
    border-color: var(--button-color);
    background-color: var(--secondary-color);
}
.button#settingsButton > div { animation: .7s ease-in-out 0s 1 hamburgerFlip; }
.button#settingsButton:hover > div > div { background-color: var(--highlight-color); }

#controlLabels {
    position: absolute; top: 0; left: 80px;
    width: 176px; height: 100%;
    z-index: 1;

    background-color: #18181838;

    transform: translateX(-100%);
    transition: transform .5s;

    display: flex; flex-direction: column; justify-content: start;
}
#controlLabels label {
    position: relative;
    width: 100%; height: 80px;
    padding-left: 8px;

    color: var(--button-color);

    display: flex; flex-direction: column; justify-content: center;
}
#stopLabel {
    transform: translateY(-100%);
    opacity: 0;
    transition: transform .25s, opacity .5s;
} /* Even though I've ID'd all of the labels, I only add rules to the stop button (for obvious reasons) */

/* These rules are for the actual IDE part of the IDE :O */

textarea { /* General rules for all of the textareas in the editor / text IO */
    position: absolute;
    min-width: 100%; min-height: 100%;
    border: none; outline: none; border-radius: 2rem;
    padding: 12px;
    color: var(--text-color);
    caret-color: var(--text-color);
    background: none;

    box-sizing: border-box;
    overflow-x: auto; overflow-y: auto;

    resize: none;
}
.overlay {
    position: absolute;
    width: 100%; height: 100%;
    border-radius: 2rem;
    padding: 12px;
    color: var(--text-color);

    box-sizing: border-box;
    overflow-x: auto; overflow-y: auto;

    white-space: pre;
}

/* The way I've made the code editor have colored letters is quite weird... */
#editorWrapper {
    position: relative;
    width: calc(50% - 90px);
    margin-right: 8px;
    border-right: 4px solid var(--border-color-2); border-radius: 2rem;

    overflow: hidden;
}
#editor { color: transparent; }
#editorOverlay:empty:not(:focus):before {
    content: attr(data-text);
    color: var(--text-color);
    opacity: .5;
}
#editorOverlay span:not([class]), .overlay span[class=""] {
    color: var(--comment);
    opacity: .5;
    transition: background-color 0.1s;
}
/* .overlay span.space { background-color: green; } */
#editorOverlay span.selected {
    background-color: var(--text-highlight-color);
    transition: background-color 0s;
}
#editorOverlay span.addsub { color: var(--addsub); }
#editorOverlay span.move   { color: var(--move);   }
#editorOverlay span.jump   { color: var(--jump);   }
#editorOverlay span.input  { color: var(--input);  }
#editorOverlay span.output { color: var(--output); }

#io { /* The IO boxes are surprisingly boring */
    margin: 0 256px 0 8px; 
    border-left: 4px solid var(--border-color-2); border-radius: 2rem;

    flex-grow: 1;
    display: flex; flex-direction: column;
}
#inputWrapper {
    position: relative;
    border-bottom: 4px solid var(--border-color-2);

    flex-grow: 2;
}
#outputWrapper {
    position: relative;
    flex-grow: 4;
}

/* The memeory div and settings menu lie beyond here */

#settingsAndMemoryWrapper { /* This took me a surprisingly long time to figure out how to do */
    position: absolute; top: 0; left: 256px;
    width: calc(100% - 258px); height: 100%;
    border-left: 4px solid var(--border-color-2);
    background-color: var(--secondary-color);

    transform: translateX(calc(100% - 258px));
    transition: transform .5s;

    display: flex; flex-direction: row;
}

#memory {
    min-width: 256px; height: 100%;
    padding: 4px 8px 4px 8px;
    background-color: var(--secondary-color);

    box-sizing: border-box;

    overflow-x: hidden;
    overflow-y: auto;
}
#memory .simplebar-content {
    display: flex; flex-direction: row; flex-wrap: wrap;
    align-content: start;
}
#memory .cell {
    border: 2px solid var(--border-color-1); border-radius: 2rem;
    color: var(--text-color);
    transition: background-color .1s;

    text-align: center;

    box-sizing: border-box;

    display: flex; flex-direction: row; justify-content: center;
}
#memory.stackedStyle .cell {
    width: 100%; height: 32px;
    margin: 8px 8px 0px 0px;
}
#memory.buttonStyle .cell {
    width: 40px; height: 32px;
    margin: 8px 8px 0px 0px;
}
#memory .cell.selected {
    background-color: var(--button-color);
    color: var(--highlight-color);
    transition: background-color 0s;
}

#settingsMenuWrapper { /* Fun Fact™! The design of this menu is actually 100% accidental. */
    width: 100%; height: 100%;
    border-left: 4px solid var(--highlight-color); border-top-left-radius: 2rem; border-bottom-left-radius: 2rem;
    background-color: var(--primary-color);

    box-sizing: border-box;

    display: flex; flex-direction: column;
}
#settingsMenu {
    width: 100%; height: 100%;
    padding: 16px;

    flex-grow: 1;
    display: flex; flex-direction: row;
}
#settingsMenu > div > * { margin: 12px; }
#settingsMenu > .label { display: flex; flex-direction: column; justify-content: left; }
#settingsMenu > .option { display: flex; flex-direction: column; }
#settingsMenu.option > div { display: flex; flex-direction: row; justify-content: left; }
#settingsMenu.option input[type="checkbox"] { width: 20px; height: 20px; }
/* #settingsMenu.option input[type="range"] {} Left over in case I want to use it */
#settingsMenu label { color: var(--text-color); }

#credits {
    width: 100%;
    border-top: 4px solid var(--highlight-color);
    padding: 16px;

    display: flex; flex-direction: column; justify-content:  flex-end;
}
#credits * { color: var(--text-color); }